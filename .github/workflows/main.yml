name: Build and Test Full Application

on:
  push:
    branches:
      - main # Trigger on commits to the main branch
  pull_request:
    branches:
      - main # Trigger on pull requests to the main branch

jobs:
  build:
    name: Build and Test Backend & Frontend
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the code
      - name: Checkout code
        uses: actions/checkout@v3

      # -------- BACKEND (SPRING BOOT) --------
      # Step 2: Set up JDK 17
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'temurin'

      # Step 3: Cache Maven dependencies
      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/School-Management-System-Spring-Boot/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      # Step 4: Build and Test Backend
      - name: Build and Test Spring Boot Application
        run: mvn clean install
        working-directory: ./School-Management-System-Spring-Boot

      # -------- FRONTEND (ANGULAR) --------
      # Step 5: Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20.18.0 # Adjusted to your Node.js version

      # Step 6: Cache Node.js dependencies
      - name: Cache Node modules
        uses: actions/cache@v3
        with:
          path: ./School-Management-System-Angular/node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('**/School-Management-System-Angular/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-modules-

      # Step 7: Install Frontend Dependencies
      - name: Install Angular Dependencies
        run: npm ci
        working-directory: ./School-Management-System-Angular

      # Step 8: Build Frontend
      - name: Build Angular Application
        run: npm run build -- --prod
        working-directory: ./School-Management-System-Angular

      # Optional: Run Frontend Tests
      - name: Run Angular Unit Tests
        run: npm run test -- --watch=false
        working-directory: ./School-Management-System-Angular
